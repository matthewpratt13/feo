*Grammar*

**Glossary**
*   -> zero or more
+   -> one or more
?   -> optional
()  -> group items

<Statement>         ::= <PuncKind::Semicolon>
                        | <Item>
                        | LetStatement
                        | ExprStatement

<LetStatement>      ::= <KwLet> <KwMut>? <Identifier> (<PuncKind::Colon> <TypeAnnotation>)? = <Expression> <PuncKind::Semicolon>
                        
<ExprStatement>     ::= <ExprWithoutBlock> <PuncKind::Semicolon>

<Expression>        ::= <ExprWithoutBlock> | <ExprWithBlock>


<ExprWithoutBlock>  ::= <Attribute> 
                        (<LiteralExpr> 
                        | <PathExpr>
                        | <OperatorExpr>
                        | <GroupedExpr>
                        | <ArrayExpr>
                        | <IndexExpr>
                        | <TupleExpr>
                        | <TupleIndexingExpr>
                        | <StructExpr>
                        | <CallExpr>
                        | <MethodCallExpr>
                        | <FieldExpr>
                        | <ContinueExpr>
                        | <BreakExpr>
                        | <ReturnExpr>
                        | <UnderscoreExpr>)

<ExprWithBlock>     ::= <Attribute>
                        (<BlockExpr>
                        | <LoopExpr>
                        | <IfExpr>
                        | <MatchExpr>)

<Attribute>    ::= <PuncKind::Hash> <(DelimKind::Bracket, DelimOrientation::Open) <SimplePath> <(DelimKind::Bracket, DelimOrientation::Close)

<SimplePath>        ::= <PuncKind::DblColon>? <PathSegment> (PuncKind::DblColon <PathSegment>)*  

<PathSegment>       ::= <Identifier>
                        | <KwSuper>
                        | <KwSelf>
                        | <KwCrate>

<PathExpr>          ::= <PathLocation> | <PathItem>

<PathLocation>      ::= <SimplePath>

<LiteralExpr>       ::= <CharLit>
                        | <StringLit>
                        | <IntLit>
                        | <UIntLit>
                        | <U256Lit>
                        | <FloatLit>
                        | <BoolLit>

<BoolLit>           ::= true | false



<BlockExpr>         ::= <(DelimKind::Brace, DelimOrientation::Open)>
                            <Statements>
                        <(DelimKind::Brace, DelimOrientation::Close)>


<Statements>        ::= <Statement>
                        | <Statement> <ExprWithoutBlock>
                        | <ExprWithoutBlock>

<OperatorExpr>      ::= <OptionUnwrapExpr>
                        <NegationExpr>
                        <ArithmeticOrLogicalExpr>
                        <ComparisonExpr>
                        <LazyBoolExpr>
                        <TypeCastExpr>
                        <AssignExpr>
                        <CompoundAssignExpr>

<OptionUnwrapExpr   ::= <Expression> <PuncKind::QuestionMark>

<NegationExpr>      ::= <PuncKind::Minus> <Expression>
                        | <PuncKind::Bang> <Expression>

<ArithOrLogicalExpr>::= <Expression> <PuncKind::Plus> <Expression>
                        | <Expression> <PuncKind::Minus> <Expression>
                        | <Expression> <PuncKind::Asterisk> <Expression>
                        | <Expression> <PuncKind::ForwardSlash> <Expression>
                        | <Expression> <PuncKind::Percent> <Expression>
                        | <Expression> <PuncKind::Ampersand> <Expression>
                        | <Expression> <PuncKind::Pipe> <Expression>
                        | <Expression> <PuncKind::DblLessThan> <Expression>
                        | <Expression> <PuncKind::DblGreaterThan> <Expression>
                        | <Expression> <PuncKind::DblAsterisk> <Expression>

<ComparisonExpr>    ::= <Expression> <PuncKind::DblEquals> <Expression>
                        | <Expression> <PuncKind::BangEquals> Expression>
                        | <Expression> <PuncKind::LessThan> <Expression>
                        | <Expression> <PuncKind::GreaterThan> <Expression>
                        | <Expression> <PuncKind::LessThanEquals> <Expression>
                        | <Expression> <PuncKind::GreaterThanEquals> <Expression>

<LazyBoolExpr>      ::= <Expression> <PuncKind::DblAmpersand> <Expression>
                        | <Expression> <PuncKind::DblPipe> <Expression>

<TypeCastExpr>      ::= <Expression> <KwAs> <Type>

<AssignExpr>        ::= <Expression> <PuncKind::Equals> <Expression>

<CompoundAssignExpr>::= <Expression> <PuncKind::PlusEquals> <Expression>
                        | <Expression> <PuncKind::MinusEquals> <Expression>
                        | <Expression> <PuncKind::AsteriskEquals> <Expression>
                        | <Expression> <PuncKind::ForwardSlashEquals> <Expression>
                        | <Expression> <PuncKind::PercentEquals> <Expression>
                        | <Expression> <PuncKind::BangEquals> <Expression>

<GroupedExpr>       ::= <(DelimKind::Parenthesis, DelimOrientation::Open)> <Expression> <(DelimKind::Parenthesis, DelimOrientation::Close)>

<ArrayExpr>         ::= <(DelimKind::Bracket, DelimOrientation::Open)> <ArrayElements>? <(DelimKind::Bracket, DelimOrientation::Close)>

<ArrayElements>     ::= <Expression> (<PuncKind::Comma> <Expression>)* <PuncKind::Comma>?
                        | <Expression> <PuncKind::Semicolon> <Expression>

<IndexExpr>         ::= <Expression> <(DelimKind::Bracket, DelimOrientation::Open) <Expression> <(DelimKind::Bracket, DelimOrientation::Close)>

<TupleExpr>         ::= <(DelimKind::Parenthesis, DelimOrientation::Open)> <TupleElements>? <(DelimKind::Parenthesis, DelimOrientation::Close)>

<TupleElements>     ::= (<Expression> <PuncKind::Comma>)+ <Expression>?

<TupleIndexingExpr> ::= <Expression> <PuncKind::Dot> <UIntLit>







                        


        








                        

